-- exploratory data analysis--

select *
from world_layoffs.layoffs_staging22
;

-- max laid off in a day, 1 = 100% all
select max(total_laid_off), max(percentage_laid_off)
from world_layoffs.layoffs_staging22
;

-- largest to close 
select *
from world_layoffs.layoffs_staging22
where percentage_laid_off = 1
order by total_laid_off desc
;

select *
from world_layoffs.layoffs_staging22
where percentage_laid_off = 1
order by funds_raised_millions desc
;

-- largest companies to do layoffs
select company, sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by company
order by 2 desc
;

-- range dates
select min(`date`), max(`date`)
from world_layoffs.layoffs_staging22
;

-- comparaisons
select industry, sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by industry
order by 2 desc
;

select country, sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by country
order by 2 desc
;

-- most layoffs by year around the world
select year(`date`), sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by year(`date`)
order by 1 desc
;

-- possible reason behind layoffs
select stage, sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by stage
order by 2 desc
;

-- not relevant
select company, sum(percentage_laid_off)
from world_layoffs.layoffs_staging22
group by company
order by 2 desc
;



-- rolling sum -----
-- for a month value = position 6, taking 2values in the date column

select substring(`date`, 6,2) as `month`, sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by substring(`date`, 6,2)
;

-- or
-- layoffs per month by year
select substring(`date`,1,7) as `month`, sum(total_laid_off)
from world_layoffs.layoffs_staging22
where substring(`date`,1,7) is not null
group by `month`
order by 1 asc
;


-- rolling sum based of months per yar

with rolling_tot as
(
select substring(`date`,1,7) as `month`, sum(total_laid_off) as total_off
from world_layoffs.layoffs_staging22
where substring(`date`,1,7) is not null
group by `month`
order by 1 asc
)
select `month`, total_off,
sum(total_off) over (order by `month`) as rolling_tot
from rolling_tot
;


select company, sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by company
order by 2 desc
;

-- companies with most layoffs
select company, year(`date`), sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by company, year(`date`)
order by company asc
;

-- which years
select company, year(`date`), sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by company, year(`date`)
order by 3 desc
;


with company_year (company, years, total_laid_off) as
(
select company, year(`date`), sum(total_laid_off)
from world_layoffs.layoffs_staging22
group by company, year(`date`)

), company_year_rank as 

(select *, 
dense_rank() over (partition by years order by total_laid_off desc) as ranking
from company_year
where years is not null
)
select *
from company_year_rank 
where ranking <= 5
;
